{"changed":true,"filter":false,"title":"Gruntfile.js","tooltip":"/Gruntfile.js","value":"// Generated on 2014-07-22 using generator-webapp 0.4.7\n'use strict';\n\n// # Globbing\n// for performance reasons we're only matching one level down:\n// 'test/spec/{,*/}*.js'\n// use this if you want to recursively match all subfolders:\n// 'test/spec/**/*.js'\n\nmodule.exports = function (grunt) {\n\n    // Load grunt tasks automatically\n    require('load-grunt-tasks')(grunt);\n\n    // Time how long tasks take. Can help when optimizing build times\n    require('time-grunt')(grunt);\n\n    // Define the configuration for all the tasks\n    grunt.initConfig({\n\n        // Project settings\n        yeoman: {\n            // Configurable paths\n            app: 'app',\n            dist: 'dist'\n        },\n\n        // Watches files for changes and runs tasks based on the changed files\n        watch: {\n            js: {\n                files: ['<%= yeoman.app %>/scripts/{,*/}*.js'],\n                tasks: ['jshint'],\n                options: {\n                    livereload: true\n                }\n            },\n            jstest: {\n                files: ['test/spec/{,*/}*.js'],\n                tasks: ['test:watch']\n            },\n            gruntfile: {\n                files: ['Gruntfile.js']\n            },\n            compass: {\n                files: ['<%= yeoman.app %>/styles/{,*/}*.{scss,sass}'],\n                tasks: ['compass:server', 'autoprefixer']\n            },\n            styles: {\n                files: ['<%= yeoman.app %>/styles/{,*/}*.css'],\n                tasks: ['newer:copy:styles', 'autoprefixer']\n            },\n            livereload: {\n                options: {\n                    livereload: '<%= connect.options.livereload %>'\n                },\n                files: [\n                    '<%= yeoman.app %>/{,*/}*.html',\n                    '.tmp/styles/{,*/}*.css',\n                    '<%= yeoman.app %>/images/{,*/}*.{gif,jpeg,jpg,png,svg,webp}'\n                ]\n            }\n        },\n\n        // The actual grunt server settings\n        connect: {\n            options: {\n                port: 9000,\n                livereload: 35729,\n                // Change this to '0.0.0.0' to access the server from outside\n                hostname: 'localhost'\n            },\n            livereload: {\n                options: {\n                    open: true,\n                    base: [\n                        '.tmp',\n                        '<%= yeoman.app %>'\n                    ]\n                }\n            },\n            test: {\n                options: {\n                    port: 9001,\n                    base: [\n                        '.tmp',\n                        'test',\n                        '<%= yeoman.app %>'\n                    ]\n                }\n            },\n            dist: {\n                options: {\n                    open: true,\n                    base: '<%= yeoman.dist %>',\n                    livereload: false\n                }\n            }\n        },\n\n        // Empties folders to start fresh\n        clean: {\n            dist: {\n                files: [{\n                    dot: true,\n                    src: [\n                        '.tmp',\n                        '<%= yeoman.dist %>/*',\n                        '!<%= yeoman.dist %>/.git*'\n                    ]\n                }]\n            },\n            server: '.tmp'\n        },\n\n        // Make sure code styles are up to par and there are no obvious mistakes\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc',\n                reporter: require('jshint-stylish')\n            },\n            all: [\n                'Gruntfile.js',\n                '<%= yeoman.app %>/scripts/{,*/}*.js',\n                '!<%= yeoman.app %>/scripts/vendor/*',\n                'test/spec/{,*/}*.js'\n            ]\n        },\n\n\n        // Mocha testing framework configuration options\n        mocha: {\n            all: {\n                options: {\n                    run: true,\n                    urls: ['http://<%= connect.test.options.hostname %>:<%= connect.test.options.port %>/index.html']\n                }\n            }\n        },\n\n\n\n\n        // Compiles Sass to CSS and generates necessary files if requested\n        compass: {\n            options: {\n                sassDir: '<%= yeoman.app %>/styles',\n                cssDir: '<%= yeoman.app %>/css',\n                generatedImagesDir: '.tmp/images/generated',\n                imagesDir: '<%= yeoman.app %>/images',\n                javascriptsDir: '<%= yeoman.app %>/scripts',\n                fontsDir: '<%= yeoman.app %>/styles/fonts',\n                importPath: '<%= yeoman.app %>/bower_components/foundation/scss/',\n                httpImagesPath: '/images',\n                httpGeneratedImagesPath: '/images/generated',\n                httpFontsPath: '/styles/fonts',\n                relativeAssets: false,\n                assetCacheBuster: false\n            },\n            dist: {\n                options: {\n                    generatedImagesDir: '<%= yeoman.dist %>/images/generated'\n                }\n            },\n            server: {\n                options: {\n                    debugInfo: true\n                }\n            }\n        },\n\n        // Add vendor prefixed styles\n        autoprefixer: {\n            options: {\n                browsers: ['last 1 version']\n            },\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: 'app/styles/',\n                    src: '{,*/}*.css',\n                    dest: 'app/styles/'\n                }]\n            }\n        },\n\n        // Automatically inject Bower components into the HTML file\n        'bower-install': {\n            app: {\n                html: '<%= yeoman.app %>/index.html',\n                ignorePath: '<%= yeoman.app %>/'\n            }\n        },\n\n        // Renames files for browser caching purposes\n        rev: {\n            dist: {\n                files: {\n                    src: [\n                        '<%= yeoman.dist %>/scripts/{,*/}*.js',\n                        '<%= yeoman.dist %>/styles/{,*/}*.css',\n                        '<%= yeoman.dist %>/images/{,*/}*.{gif,jpeg,jpg,png,webp}',\n                        '<%= yeoman.dist %>/styles/fonts/{,*/}*.*'\n                    ]\n                }\n            }\n        },\n\n        // Reads HTML for usemin blocks to enable smart builds that automatically\n        // concat, minify and revision files. Creates configurations in memory so\n        // additional tasks can operate on them\n        useminPrepare: {\n            options: {\n                dest: '<%= yeoman.dist %>'\n            },\n            html: '<%= yeoman.app %>/index.html'\n        },\n\n        // Performs rewrites based on rev and the useminPrepare configuration\n        usemin: {\n            options: {\n                assetsDirs: ['<%= yeoman.dist %>']\n            },\n            html: ['<%= yeoman.dist %>/{,*/}*.html'],\n            css: ['<%= yeoman.dist %>/styles/{,*/}*.css']\n        },\n\n        // The following *-min tasks produce minified files in the dist folder\n        imagemin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/images',\n                    src: '{,*/}*.{gif,jpeg,jpg,png}',\n                    dest: '<%= yeoman.dist %>/images'\n                }]\n            }\n        },\n        svgmin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/images',\n                    src: '{,*/}*.svg',\n                    dest: '<%= yeoman.dist %>/images'\n                }]\n            }\n        },\n        htmlmin: {\n            dist: {\n                options: {\n                    collapseBooleanAttributes: true,\n                    collapseWhitespace: true,\n                    removeAttributeQuotes: true,\n                    removeCommentsFromCDATA: true,\n                    removeEmptyAttributes: true,\n                    removeOptionalTags: true,\n                    removeRedundantAttributes: true,\n                    useShortDoctype: true\n                },\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.dist %>',\n                    src: '{,*/}*.html',\n                    dest: '<%= yeoman.dist %>'\n                }]\n            }\n        },\n\n        // By default, your `index.html`'s <!-- Usemin block --> will take care of\n        // minification. These next options are pre-configured if you do not wish\n        // to use the Usemin blocks.\n        // cssmin: {\n        //     dist: {\n        //         files: {\n        //             '<%= yeoman.dist %>/styles/main.css': [\n        //                 '.tmp/styles/{,*/}*.css',\n        //                 '<%= yeoman.app %>/styles/{,*/}*.css'\n        //             ]\n        //         }\n        //     }\n        // },\n        // uglify: {\n        //     dist: {\n        //         files: {\n        //             '<%= yeoman.dist %>/scripts/scripts.js': [\n        //                 '<%= yeoman.dist %>/scripts/scripts.js'\n        //             ]\n        //         }\n        //     }\n        // },\n        // concat: {\n        //     dist: {}\n        // },\n\n        // Copies remaining files to places other tasks can use\n        copy: {\n            dist: {\n                files: [{\n                    expand: true,\n                    dot: true,\n                    cwd: '<%= yeoman.app %>',\n                    dest: '<%= yeoman.dist %>',\n                    src: [\n                        '*.{ico,png,txt}',\n                        '.htaccess',\n                        'images/{,*/}*.webp',\n                        '{,*/}*.html',\n                        'styles/fonts/{,*/}*.*',\n                        'bower_components/' + (this.includeCompass ? 'sass-' : '') + 'bootstrap/' + (this.includeCompass ? 'fonts/' : 'dist/fonts/') +'*.*'\n                    ]\n                }]\n            },\n            styles: {\n                expand: true,\n                dot: true,\n                cwd: '<%= yeoman.app %>/styles',\n                dest: '.tmp/styles/',\n                src: '{,*/}*.css'\n            }\n        },\n\n\n        // Generates a custom Modernizr build that includes only the tests you\n        // reference in your app\n        modernizr: {\n            devFile: '<%= yeoman.app %>/bower_components/modernizr/modernizr.js',\n            outputFile: '<%= yeoman.dist %>/bower_components/modernizr/modernizr.js',\n            files: [\n                '<%= yeoman.dist %>/scripts/{,*/}*.js',\n                '<%= yeoman.dist %>/styles/{,*/}*.css',\n                '!<%= yeoman.dist %>/scripts/vendor/*'\n            ],\n            uglify: true\n        },\n\n        // Run some tasks in parallel to speed up build process\n        concurrent: {\n            server: [\n                'compass:server',\n                'copy:styles'\n            ],\n            test: [\n                'copy:styles'\n            ],\n            dist: [\n                'compass',\n                'copy:styles',\n                'imagemin',\n                'svgmin'\n            ]\n        }\n    });\n\n\n    grunt.registerTask('serve', function (target) {\n        if (target === 'dist') {\n            return grunt.task.run(['build', 'connect:dist:keepalive']);\n        }\n\n        grunt.task.run([\n            'clean:server',\n            'concurrent:server',\n            'autoprefixer',\n            'connect:livereload',\n            'watch'\n        ]);\n    });\n\n    grunt.registerTask('server', function () {\n        grunt.log.warn('The `server` task has been deprecated. Use `grunt serve` to start a server.');\n        grunt.task.run(['serve']);\n    });\n\n    grunt.registerTask('test', function(target) {\n        if (target !== 'watch') {\n            grunt.task.run([\n                'clean:server',\n                'concurrent:test',\n                'autoprefixer',\n            ]);\n        }\n\n        grunt.task.run([\n            'connect:test',\n            'mocha'\n        ]);\n    });\n\n    grunt.registerTask('build', [\n        'clean:dist',\n        'useminPrepare',\n        'concurrent:dist',\n        'autoprefixer',\n        'concat',\n        'cssmin',\n        'uglify',\n        'copy:dist',\n        'modernizr',\n        'rev',\n        'usemin',\n        'htmlmin'\n    ]);\n\n    grunt.registerTask('default', [\n        'newer:jshint',\n        'test',\n        'build'\n    ]);\n};\n","undoManager":{"mark":90,"position":100,"stack":[[{"group":"doc","deltas":[{"start":{"row":23,"column":2},"end":{"row":23,"column":3},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":23,"column":1},"end":{"row":23,"column":2},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":23,"column":0},"end":{"row":23,"column":1},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":22,"column":53},"end":{"row":23,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":22,"column":53},"end":{"row":23,"column":0},"action":"insert","lines":["",""]},{"start":{"row":23,"column":0},"end":{"row":23,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":23,"column":2},"end":{"row":23,"column":4},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":25,"column":2},"end":{"row":25,"column":3},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":25,"column":1},"end":{"row":25,"column":2},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":25,"column":0},"end":{"row":25,"column":1},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":25,"column":0},"end":{"row":25,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":6,"column":6},"end":{"row":8,"column":8},"action":"remove","lines":["options: {","        banner: '/*! <%= pkg.name %> <%= grunt.template.today(\"yyyy-mm-dd\") %> */\\n'","      },"]}]}],[{"group":"doc","deltas":[{"start":{"row":5,"column":3},"end":{"row":5,"column":13},"action":"remove","lines":[" uglify: {"]}]}],[{"group":"doc","deltas":[{"start":{"row":15,"column":4},"end":{"row":15,"column":5},"action":"remove","lines":["}"]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":34},"end":{"row":27,"column":40},"action":"remove","lines":["uglify"]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":34},"end":{"row":27,"column":35},"action":"remove","lines":["'"]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":33},"end":{"row":27,"column":34},"action":"remove","lines":["'"]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":33},"end":{"row":27,"column":34},"action":"remove","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":33},"end":{"row":27,"column":34},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":8},"end":{"row":13,"column":0},"action":"insert","lines":["",""]},{"start":{"row":13,"column":0},"end":{"row":13,"column":6},"action":"insert","lines":["      "]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":6},"end":{"row":16,"column":7},"action":"insert","lines":["  sass: {","        src: ['<%= yeoman.app %>/styles/{,*/}*.{scss,sass}'],","        ignorePath: /(\\.\\.\\/){1,2}bower_components\\//","      }"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":4},"end":{"row":13,"column":8},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":14,"column":15},"end":{"row":14,"column":32},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":14,"column":15},"end":{"row":14,"column":16},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":14,"column":16},"end":{"row":14,"column":17},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":14,"column":17},"end":{"row":14,"column":18},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":14,"column":19},"end":{"row":14,"column":25},"action":"remove","lines":["styles"]},{"start":{"row":14,"column":19},"end":{"row":14,"column":20},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":14,"column":20},"end":{"row":14,"column":21},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":14,"column":21},"end":{"row":14,"column":22},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":14,"column":22},"end":{"row":14,"column":23},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":33,"column":2},"action":"remove","lines":["module.exports = function(grunt) {","","  // Project configuration.","  grunt.initConfig({","    pkg: grunt.file.readJSON('package.json'),","   ","      ","      ","    watch: {","        compass: {","        files: ['app/styles/{,*/}*.{scss,sass}'],","        tasks: ['compass:server', 'autoprefixer']","      },","    sass: {","        src: ['app/scss/{,*/}*.{scss,sass}'],","        ignorePath: /(\\.\\.\\/){1,2}bower_components\\//","      }","    }","        ","    ","          ","    ","  });","","  // Load the plugin that provides the \"uglify\" task.","    grunt.loadNpmTasks('grunt-contrib-uglify');","    grunt.loadNpmTasks('grunt-contrib-watch');","    grunt.loadNpmTasks('grunt-contrib-compass');","  ","","  // Default task(s).","  grunt.registerTask('default', ['watch']);","","};"]},{"start":{"row":0,"column":0},"end":{"row":409,"column":0},"action":"insert","lines":["// Generated on 2014-07-22 using generator-webapp 0.4.7","'use strict';","","// # Globbing","// for performance reasons we're only matching one level down:","// 'test/spec/{,*/}*.js'","// use this if you want to recursively match all subfolders:","// 'test/spec/**/*.js'","","module.exports = function (grunt) {","","    // Load grunt tasks automatically","    require('load-grunt-tasks')(grunt);","","    // Time how long tasks take. Can help when optimizing build times","    require('time-grunt')(grunt);","","    // Define the configuration for all the tasks","    grunt.initConfig({","","        // Project settings","        yeoman: {","            // Configurable paths","            app: 'app',","            dist: 'dist'","        },","","        // Watches files for changes and runs tasks based on the changed files","        watch: {","            js: {","                files: ['<%= yeoman.app %>/scripts/{,*/}*.js'],","                tasks: ['jshint'],","                options: {","                    livereload: true","                }","            },","            jstest: {","                files: ['test/spec/{,*/}*.js'],","                tasks: ['test:watch']","            },","            gruntfile: {","                files: ['Gruntfile.js']","            },","            compass: {","                files: ['<%= yeoman.app %>/styles/{,*/}*.{scss,sass}'],","                tasks: ['compass:server', 'autoprefixer']","            },","            styles: {","                files: ['<%= yeoman.app %>/styles/{,*/}*.css'],","                tasks: ['newer:copy:styles', 'autoprefixer']","            },","            livereload: {","                options: {","                    livereload: '<%= connect.options.livereload %>'","                },","                files: [","                    '<%= yeoman.app %>/{,*/}*.html',","                    '.tmp/styles/{,*/}*.css',","                    '<%= yeoman.app %>/images/{,*/}*.{gif,jpeg,jpg,png,svg,webp}'","                ]","            }","        },","","        // The actual grunt server settings","        connect: {","            options: {","                port: 9000,","                livereload: 35729,","                // Change this to '0.0.0.0' to access the server from outside","                hostname: 'localhost'","            },","            livereload: {","                options: {","                    open: true,","                    base: [","                        '.tmp',","                        '<%= yeoman.app %>'","                    ]","                }","            },","            test: {","                options: {","                    port: 9001,","                    base: [","                        '.tmp',","                        'test',","                        '<%= yeoman.app %>'","                    ]","                }","            },","            dist: {","                options: {","                    open: true,","                    base: '<%= yeoman.dist %>',","                    livereload: false","                }","            }","        },","","        // Empties folders to start fresh","        clean: {","            dist: {","                files: [{","                    dot: true,","                    src: [","                        '.tmp',","                        '<%= yeoman.dist %>/*',","                        '!<%= yeoman.dist %>/.git*'","                    ]","                }]","            },","            server: '.tmp'","        },","","        // Make sure code styles are up to par and there are no obvious mistakes","        jshint: {","            options: {","                jshintrc: '.jshintrc',","                reporter: require('jshint-stylish')","            },","            all: [","                'Gruntfile.js',","                '<%= yeoman.app %>/scripts/{,*/}*.js',","                '!<%= yeoman.app %>/scripts/vendor/*',","                'test/spec/{,*/}*.js'","            ]","        },","","","        // Mocha testing framework configuration options","        mocha: {","            all: {","                options: {","                    run: true,","                    urls: ['http://<%= connect.test.options.hostname %>:<%= connect.test.options.port %>/index.html']","                }","            }","        },","","","","","        // Compiles Sass to CSS and generates necessary files if requested","        compass: {","            options: {","                sassDir: '<%= yeoman.app %>/styles',","                cssDir: '<%= yeoman.app %>/css',","                generatedImagesDir: '.tmp/images/generated',","                imagesDir: '<%= yeoman.app %>/images',","                javascriptsDir: '<%= yeoman.app %>/scripts',","                fontsDir: '<%= yeoman.app %>/styles/fonts',","                importPath: '<%= yeoman.app %>/bower_components/foundation/scss/',","                httpImagesPath: '/images',","                httpGeneratedImagesPath: '/images/generated',","                httpFontsPath: '/styles/fonts',","                relativeAssets: false,","                assetCacheBuster: false","            },","            dist: {","                options: {","                    generatedImagesDir: '<%= yeoman.dist %>/images/generated'","                }","            },","            server: {","                options: {","                    debugInfo: true","                }","            }","        },","","        // Add vendor prefixed styles","        autoprefixer: {","            options: {","                browsers: ['last 1 version']","            },","            dist: {","                files: [{","                    expand: true,","                    cwd: 'app/styles/',","                    src: '{,*/}*.css',","                    dest: 'app/styles/'","                }]","            }","        },","","        // Automatically inject Bower components into the HTML file","        'bower-install': {","            app: {","                html: '<%= yeoman.app %>/index.html',","                ignorePath: '<%= yeoman.app %>/'","            }","        },","","        // Renames files for browser caching purposes","        rev: {","            dist: {","                files: {","                    src: [","                        '<%= yeoman.dist %>/scripts/{,*/}*.js',","                        '<%= yeoman.dist %>/styles/{,*/}*.css',","                        '<%= yeoman.dist %>/images/{,*/}*.{gif,jpeg,jpg,png,webp}',","                        '<%= yeoman.dist %>/styles/fonts/{,*/}*.*'","                    ]","                }","            }","        },","","        // Reads HTML for usemin blocks to enable smart builds that automatically","        // concat, minify and revision files. Creates configurations in memory so","        // additional tasks can operate on them","        useminPrepare: {","            options: {","                dest: '<%= yeoman.dist %>'","            },","            html: '<%= yeoman.app %>/index.html'","        },","","        // Performs rewrites based on rev and the useminPrepare configuration","        usemin: {","            options: {","                assetsDirs: ['<%= yeoman.dist %>']","            },","            html: ['<%= yeoman.dist %>/{,*/}*.html'],","            css: ['<%= yeoman.dist %>/styles/{,*/}*.css']","        },","","        // The following *-min tasks produce minified files in the dist folder","        imagemin: {","            dist: {","                files: [{","                    expand: true,","                    cwd: '<%= yeoman.app %>/images',","                    src: '{,*/}*.{gif,jpeg,jpg,png}',","                    dest: '<%= yeoman.dist %>/images'","                }]","            }","        },","        svgmin: {","            dist: {","                files: [{","                    expand: true,","                    cwd: '<%= yeoman.app %>/images',","                    src: '{,*/}*.svg',","                    dest: '<%= yeoman.dist %>/images'","                }]","            }","        },","        htmlmin: {","            dist: {","                options: {","                    collapseBooleanAttributes: true,","                    collapseWhitespace: true,","                    removeAttributeQuotes: true,","                    removeCommentsFromCDATA: true,","                    removeEmptyAttributes: true,","                    removeOptionalTags: true,","                    removeRedundantAttributes: true,","                    useShortDoctype: true","                },","                files: [{","                    expand: true,","                    cwd: '<%= yeoman.dist %>',","                    src: '{,*/}*.html',","                    dest: '<%= yeoman.dist %>'","                }]","            }","        },","","        // By default, your `index.html`'s <!-- Usemin block --> will take care of","        // minification. These next options are pre-configured if you do not wish","        // to use the Usemin blocks.","        // cssmin: {","        //     dist: {","        //         files: {","        //             '<%= yeoman.dist %>/styles/main.css': [","        //                 '.tmp/styles/{,*/}*.css',","        //                 '<%= yeoman.app %>/styles/{,*/}*.css'","        //             ]","        //         }","        //     }","        // },","        // uglify: {","        //     dist: {","        //         files: {","        //             '<%= yeoman.dist %>/scripts/scripts.js': [","        //                 '<%= yeoman.dist %>/scripts/scripts.js'","        //             ]","        //         }","        //     }","        // },","        // concat: {","        //     dist: {}","        // },","","        // Copies remaining files to places other tasks can use","        copy: {","            dist: {","                files: [{","                    expand: true,","                    dot: true,","                    cwd: '<%= yeoman.app %>',","                    dest: '<%= yeoman.dist %>',","                    src: [","                        '*.{ico,png,txt}',","                        '.htaccess',","                        'images/{,*/}*.webp',","                        '{,*/}*.html',","                        'styles/fonts/{,*/}*.*',","                        'bower_components/' + (this.includeCompass ? 'sass-' : '') + 'bootstrap/' + (this.includeCompass ? 'fonts/' : 'dist/fonts/') +'*.*'","                    ]","                }]","            },","            styles: {","                expand: true,","                dot: true,","                cwd: '<%= yeoman.app %>/styles',","                dest: '.tmp/styles/',","                src: '{,*/}*.css'","            }","        },","","","        // Generates a custom Modernizr build that includes only the tests you","        // reference in your app","        modernizr: {","            devFile: '<%= yeoman.app %>/bower_components/modernizr/modernizr.js',","            outputFile: '<%= yeoman.dist %>/bower_components/modernizr/modernizr.js',","            files: [","                '<%= yeoman.dist %>/scripts/{,*/}*.js',","                '<%= yeoman.dist %>/styles/{,*/}*.css',","                '!<%= yeoman.dist %>/scripts/vendor/*'","            ],","            uglify: true","        },","","        // Run some tasks in parallel to speed up build process","        concurrent: {","            server: [","                'compass:server',","                'copy:styles'","            ],","            test: [","                'copy:styles'","            ],","            dist: [","                'compass',","                'copy:styles',","                'imagemin',","                'svgmin'","            ]","        }","    });","","","    grunt.registerTask('serve', function (target) {","        if (target === 'dist') {","            return grunt.task.run(['build', 'connect:dist:keepalive']);","        }","","        grunt.task.run([","            'clean:server',","            'concurrent:server',","            'autoprefixer',","            'connect:livereload',","            'watch'","        ]);","    });","","    grunt.registerTask('server', function () {","        grunt.log.warn('The `server` task has been deprecated. Use `grunt serve` to start a server.');","        grunt.task.run(['serve']);","    });","","    grunt.registerTask('test', function(target) {","        if (target !== 'watch') {","            grunt.task.run([","                'clean:server',","                'concurrent:test',","                'autoprefixer',","            ]);","        }","","        grunt.task.run([","            'connect:test',","            'mocha'","        ]);","    });","","    grunt.registerTask('build', [","        'clean:dist',","        'useminPrepare',","        'concurrent:dist',","        'autoprefixer',","        'concat',","        'cssmin',","        'uglify',","        'copy:dist',","        'modernizr',","        'rev',","        'usemin',","        'htmlmin'","    ]);","","    grunt.registerTask('default', [","        'newer:jshint',","        'test',","        'build'","    ]);","};",""]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":25},"end":{"row":30,"column":42},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":30,"column":25},"end":{"row":30,"column":28},"action":"insert","lines":["app"]},{"start":{"row":44,"column":25},"end":{"row":44,"column":42},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":44,"column":25},"end":{"row":44,"column":28},"action":"insert","lines":["app"]},{"start":{"row":48,"column":25},"end":{"row":48,"column":42},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":48,"column":25},"end":{"row":48,"column":28},"action":"insert","lines":["app"]},{"start":{"row":56,"column":21},"end":{"row":56,"column":38},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":56,"column":21},"end":{"row":56,"column":24},"action":"insert","lines":["app"]},{"start":{"row":58,"column":21},"end":{"row":58,"column":38},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":58,"column":21},"end":{"row":58,"column":24},"action":"insert","lines":["app"]},{"start":{"row":76,"column":25},"end":{"row":76,"column":42},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":76,"column":25},"end":{"row":76,"column":28},"action":"insert","lines":["app"]},{"start":{"row":86,"column":25},"end":{"row":86,"column":42},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":86,"column":25},"end":{"row":86,"column":28},"action":"insert","lines":["app"]},{"start":{"row":122,"column":17},"end":{"row":122,"column":34},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":122,"column":17},"end":{"row":122,"column":20},"action":"insert","lines":["app"]},{"start":{"row":123,"column":18},"end":{"row":123,"column":35},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":123,"column":18},"end":{"row":123,"column":21},"action":"insert","lines":["app"]},{"start":{"row":145,"column":26},"end":{"row":145,"column":43},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":145,"column":26},"end":{"row":145,"column":29},"action":"insert","lines":["app"]},{"start":{"row":146,"column":25},"end":{"row":146,"column":42},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":146,"column":25},"end":{"row":146,"column":28},"action":"insert","lines":["app"]},{"start":{"row":148,"column":28},"end":{"row":148,"column":45},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":148,"column":28},"end":{"row":148,"column":31},"action":"insert","lines":["app"]},{"start":{"row":149,"column":33},"end":{"row":149,"column":50},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":149,"column":33},"end":{"row":149,"column":36},"action":"insert","lines":["app"]},{"start":{"row":150,"column":27},"end":{"row":150,"column":44},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":150,"column":27},"end":{"row":150,"column":30},"action":"insert","lines":["app"]},{"start":{"row":151,"column":29},"end":{"row":151,"column":46},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":151,"column":29},"end":{"row":151,"column":32},"action":"insert","lines":["app"]},{"start":{"row":188,"column":23},"end":{"row":188,"column":40},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":188,"column":23},"end":{"row":188,"column":26},"action":"insert","lines":["app"]},{"start":{"row":189,"column":29},"end":{"row":189,"column":46},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":189,"column":29},"end":{"row":189,"column":32},"action":"insert","lines":["app"]},{"start":{"row":214,"column":19},"end":{"row":214,"column":36},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":214,"column":19},"end":{"row":214,"column":22},"action":"insert","lines":["app"]},{"start":{"row":231,"column":26},"end":{"row":231,"column":43},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":231,"column":26},"end":{"row":231,"column":29},"action":"insert","lines":["app"]},{"start":{"row":241,"column":26},"end":{"row":241,"column":43},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":241,"column":26},"end":{"row":241,"column":29},"action":"insert","lines":["app"]},{"start":{"row":276,"column":28},"end":{"row":276,"column":45},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":276,"column":28},"end":{"row":276,"column":31},"action":"insert","lines":["app"]},{"start":{"row":300,"column":26},"end":{"row":300,"column":43},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":300,"column":26},"end":{"row":300,"column":29},"action":"insert","lines":["app"]},{"start":{"row":315,"column":22},"end":{"row":315,"column":39},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":315,"column":22},"end":{"row":315,"column":25},"action":"insert","lines":["app"]},{"start":{"row":325,"column":22},"end":{"row":325,"column":39},"action":"remove","lines":["<%= yeoman.app %>"]},{"start":{"row":325,"column":22},"end":{"row":325,"column":25},"action":"insert","lines":["app"]}]}],[{"group":"doc","deltas":[{"start":{"row":44,"column":29},"end":{"row":44,"column":35},"action":"remove","lines":["styles"]},{"start":{"row":44,"column":29},"end":{"row":44,"column":30},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":44,"column":30},"end":{"row":44,"column":31},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":44,"column":31},"end":{"row":44,"column":32},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":44,"column":32},"end":{"row":44,"column":33},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":29},"end":{"row":48,"column":35},"action":"remove","lines":["styles"]},{"start":{"row":48,"column":29},"end":{"row":48,"column":30},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":30},"end":{"row":48,"column":31},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":31},"end":{"row":48,"column":32},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":32},"end":{"row":48,"column":33},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":57,"column":26},"end":{"row":57,"column":32},"action":"remove","lines":["styles"]},{"start":{"row":57,"column":26},"end":{"row":57,"column":27},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":57,"column":27},"end":{"row":57,"column":28},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":57,"column":28},"end":{"row":57,"column":29},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":57,"column":29},"end":{"row":57,"column":30},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":145,"column":30},"end":{"row":145,"column":36},"action":"remove","lines":["styles"]},{"start":{"row":145,"column":30},"end":{"row":145,"column":31},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":145,"column":31},"end":{"row":145,"column":32},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":145,"column":32},"end":{"row":145,"column":33},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":145,"column":33},"end":{"row":145,"column":34},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":16},"end":{"row":29,"column":0},"action":"insert","lines":["",""]},{"start":{"row":29,"column":0},"end":{"row":29,"column":12},"action":"insert","lines":["            "]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":12},"end":{"row":37,"column":5},"action":"insert","lines":["    uglify: {","      options: {","        banner: '/*! <%= pkg.name %> <%= grunt.template.today(\"yyyy-mm-dd\") %> */\\n'","      },","      build: {","        src: 'client/scripts/app.js',","        dest: 'client/js/app.min.js'","      }","    }"]}]}],[{"group":"doc","deltas":[{"start":{"row":37,"column":5},"end":{"row":37,"column":6},"action":"insert","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"remove","lines":["    "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"remove","lines":["    "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":4},"action":"remove","lines":["    "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"remove","lines":["    "]},{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"remove","lines":["    "]},{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"remove","lines":["    "]},{"start":{"row":35,"column":0},"end":{"row":35,"column":4},"action":"remove","lines":["    "]},{"start":{"row":36,"column":0},"end":{"row":36,"column":4},"action":"remove","lines":["    "]},{"start":{"row":37,"column":0},"end":{"row":37,"column":4},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"remove","lines":["    "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":2},"action":"remove","lines":["  "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":4},"action":"remove","lines":["    "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":2},"action":"remove","lines":["  "]},{"start":{"row":33,"column":0},"end":{"row":33,"column":2},"action":"remove","lines":["  "]},{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"remove","lines":["    "]},{"start":{"row":35,"column":0},"end":{"row":35,"column":4},"action":"remove","lines":["    "]},{"start":{"row":36,"column":0},"end":{"row":36,"column":2},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"insert","lines":["    "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"insert","lines":["    "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":4},"action":"insert","lines":["    "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"insert","lines":["    "]},{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"insert","lines":["    "]},{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"insert","lines":["    "]},{"start":{"row":35,"column":0},"end":{"row":35,"column":4},"action":"insert","lines":["    "]},{"start":{"row":36,"column":0},"end":{"row":36,"column":4},"action":"insert","lines":["    "]},{"start":{"row":37,"column":0},"end":{"row":37,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"insert","lines":["    "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"insert","lines":["    "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":4},"action":"insert","lines":["    "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"insert","lines":["    "]},{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"insert","lines":["    "]},{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"insert","lines":["    "]},{"start":{"row":35,"column":0},"end":{"row":35,"column":4},"action":"insert","lines":["    "]},{"start":{"row":36,"column":0},"end":{"row":36,"column":4},"action":"insert","lines":["    "]},{"start":{"row":37,"column":0},"end":{"row":37,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"insert","lines":["    "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"insert","lines":["    "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":4},"action":"insert","lines":["    "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"insert","lines":["    "]},{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"insert","lines":["    "]},{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"insert","lines":["    "]},{"start":{"row":35,"column":0},"end":{"row":35,"column":4},"action":"insert","lines":["    "]},{"start":{"row":36,"column":0},"end":{"row":36,"column":4},"action":"insert","lines":["    "]},{"start":{"row":37,"column":0},"end":{"row":37,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"insert","lines":["    "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":4},"action":"insert","lines":["    "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"insert","lines":["    "]},{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"insert","lines":["    "]},{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"insert","lines":["    "]},{"start":{"row":35,"column":0},"end":{"row":35,"column":4},"action":"insert","lines":["    "]},{"start":{"row":36,"column":0},"end":{"row":36,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"insert","lines":["    "]},{"start":{"row":35,"column":0},"end":{"row":35,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":26},"end":{"row":34,"column":32},"action":"remove","lines":["client"]},{"start":{"row":34,"column":26},"end":{"row":34,"column":27},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":27},"end":{"row":34,"column":28},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":28},"end":{"row":34,"column":29},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":35,"column":27},"end":{"row":35,"column":33},"action":"remove","lines":["client"]},{"start":{"row":35,"column":27},"end":{"row":35,"column":28},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":35,"column":28},"end":{"row":35,"column":29},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":35,"column":29},"end":{"row":35,"column":30},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":38,"column":6},"end":{"row":44,"column":14},"action":"remove","lines":["      js: {","                files: ['app/scripts/{,*/}*.js'],","                tasks: ['jshint'],","                options: {","                    livereload: true","                }","            },"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":0},"end":{"row":33,"column":24},"action":"remove","lines":["                options: {","                banner: '/*! <%= pkg.name %> <%= grunt.template.today(\"yyyy-mm-dd\") %> */\\n'","                },","                build: {"]}]}],[{"group":"doc","deltas":[{"start":{"row":33,"column":16},"end":{"row":33,"column":17},"action":"remove","lines":["}"]}]}],[{"group":"doc","deltas":[{"start":{"row":33,"column":12},"end":{"row":33,"column":16},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":33,"column":8},"end":{"row":33,"column":12},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":33,"column":4},"end":{"row":33,"column":8},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":32,"column":45},"end":{"row":33,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":21},"end":{"row":30,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":0},"end":{"row":37,"column":14},"action":"remove","lines":["            jstest: {","                files: ['test/spec/{,*/}*.js'],","                tasks: ['test:watch']","            },"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":7},"end":{"row":32,"column":14},"action":"remove","lines":["     uglify: {","                    src: 'app/scripts/app.js',","                    dest: 'app/js/app.min.js'","            },"]}]}],[{"group":"doc","deltas":[{"start":{"row":25,"column":10},"end":{"row":26,"column":0},"action":"insert","lines":["",""]},{"start":{"row":26,"column":0},"end":{"row":26,"column":8},"action":"insert","lines":["        "]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":8},"end":{"row":27,"column":0},"action":"insert","lines":["",""]},{"start":{"row":27,"column":0},"end":{"row":27,"column":8},"action":"insert","lines":["        "]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":8},"end":{"row":30,"column":14},"action":"insert","lines":["     uglify: {","                    src: 'app/scripts/app.js',","                    dest: 'app/js/app.min.js'","            },"]}]}],[{"group":"doc","deltas":[{"start":{"row":403,"column":15},"end":{"row":403,"column":16},"action":"insert","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":403,"column":16},"end":{"row":404,"column":0},"action":"insert","lines":["",""]},{"start":{"row":404,"column":0},"end":{"row":404,"column":8},"action":"insert","lines":["        "]}]}],[{"group":"doc","deltas":[{"start":{"row":404,"column":8},"end":{"row":404,"column":10},"action":"insert","lines":["''"]}]}],[{"group":"doc","deltas":[{"start":{"row":404,"column":9},"end":{"row":404,"column":10},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":404,"column":10},"end":{"row":404,"column":11},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":404,"column":9},"end":{"row":404,"column":11},"action":"remove","lines":["ug"]},{"start":{"row":404,"column":9},"end":{"row":404,"column":15},"action":"insert","lines":["uglify"]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":7},"end":{"row":34,"column":8},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":8},"end":{"row":34,"column":12},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":12},"end":{"row":34,"column":16},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":12},"end":{"row":34,"column":16},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":12},"end":{"row":37,"column":14},"action":"insert","lines":["    uglify: {","                    src: 'app/scripts/app.js',","                    dest: 'app/js/app.min.js'","            },"]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":12},"end":{"row":60,"column":13},"action":"remove","lines":["gruntfile: {","                files: ['Gruntfile.js']","            },","            compass: {","                files: ['app/scss/{,*/}*.{scss,sass}'],","                tasks: ['compass:server', 'autoprefixer']","            },","            styles: {","                files: ['app/scss/{,*/}*.css'],","                tasks: ['newer:copy:styles', 'autoprefixer']","            },","            livereload: {","                options: {","                    livereload: '<%= connect.options.livereload %>'","                },","                files: [","                    'app/{,*/}*.html',","                    '.tmp/scss/{,*/}*.css',","                    'app/images/{,*/}*.{gif,jpeg,jpg,png,svg,webp}'","                ]","            }"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":390,"column":0},"action":"remove","lines":["// Generated on 2014-07-22 using generator-webapp 0.4.7","'use strict';","","// # Globbing","// for performance reasons we're only matching one level down:","// 'test/spec/{,*/}*.js'","// use this if you want to recursively match all subfolders:","// 'test/spec/**/*.js'","","module.exports = function (grunt) {","","    // Load grunt tasks automatically","    require('load-grunt-tasks')(grunt);","","    // Time how long tasks take. Can help when optimizing build times","    require('time-grunt')(grunt);","","    // Define the configuration for all the tasks","    grunt.initConfig({","","        // Project settings","        yeoman: {","            // Configurable paths","            app: 'app',","            dist: 'dist'","        },","        ","             uglify: {","                    src: 'app/scripts/app.js',","                    dest: 'app/js/app.min.js'","            },","","        // Watches files for changes and runs tasks based on the changed files","        watch: {","                uglify: {","                    src: 'app/scripts/app.js',","                    dest: 'app/js/app.min.js'","            },","      ","","            ","        },","","        // The actual grunt server settings","        connect: {","            options: {","                port: 9000,","                livereload: 35729,","                // Change this to '0.0.0.0' to access the server from outside","                hostname: 'localhost'","            },","            livereload: {","                options: {","                    open: true,","                    base: [","                        '.tmp',","                        'app'","                    ]","                }","            },","            test: {","                options: {","                    port: 9001,","                    base: [","                        '.tmp',","                        'test',","                        'app'","                    ]","                }","            },","            dist: {","                options: {","                    open: true,","                    base: '<%= yeoman.dist %>',","                    livereload: false","                }","            }","        },","","        // Empties folders to start fresh","        clean: {","            dist: {","                files: [{","                    dot: true,","                    src: [","                        '.tmp',","                        '<%= yeoman.dist %>/*',","                        '!<%= yeoman.dist %>/.git*'","                    ]","                }]","            },","            server: '.tmp'","        },","","        // Make sure code styles are up to par and there are no obvious mistakes","        jshint: {","            options: {","                jshintrc: '.jshintrc',","                reporter: require('jshint-stylish')","            },","            all: [","                'Gruntfile.js',","                'app/scripts/{,*/}*.js',","                '!app/scripts/vendor/*',","                'test/spec/{,*/}*.js'","            ]","        },","","","        // Mocha testing framework configuration options","        mocha: {","            all: {","                options: {","                    run: true,","                    urls: ['http://<%= connect.test.options.hostname %>:<%= connect.test.options.port %>/index.html']","                }","            }","        },","","","","","        // Compiles Sass to CSS and generates necessary files if requested","        compass: {","            options: {","                sassDir: 'app/scss',","                cssDir: 'app/css',","                generatedImagesDir: '.tmp/images/generated',","                imagesDir: 'app/images',","                javascriptsDir: 'app/scripts',","                fontsDir: 'app/styles/fonts',","                importPath: 'app/bower_components/foundation/scss/',","                httpImagesPath: '/images',","                httpGeneratedImagesPath: '/images/generated',","                httpFontsPath: '/styles/fonts',","                relativeAssets: false,","                assetCacheBuster: false","            },","            dist: {","                options: {","                    generatedImagesDir: '<%= yeoman.dist %>/images/generated'","                }","            },","            server: {","                options: {","                    debugInfo: true","                }","            }","        },","","        // Add vendor prefixed styles","        autoprefixer: {","            options: {","                browsers: ['last 1 version']","            },","            dist: {","                files: [{","                    expand: true,","                    cwd: 'app/styles/',","                    src: '{,*/}*.css',","                    dest: 'app/styles/'","                }]","            }","        },","","        // Automatically inject Bower components into the HTML file","        'bower-install': {","            app: {","                html: 'app/index.html',","                ignorePath: 'app/'","            }","        },","","        // Renames files for browser caching purposes","        rev: {","            dist: {","                files: {","                    src: [","                        '<%= yeoman.dist %>/scripts/{,*/}*.js',","                        '<%= yeoman.dist %>/styles/{,*/}*.css',","                        '<%= yeoman.dist %>/images/{,*/}*.{gif,jpeg,jpg,png,webp}',","                        '<%= yeoman.dist %>/styles/fonts/{,*/}*.*'","                    ]","                }","            }","        },","","        // Reads HTML for usemin blocks to enable smart builds that automatically","        // concat, minify and revision files. Creates configurations in memory so","        // additional tasks can operate on them","        useminPrepare: {","            options: {","                dest: '<%= yeoman.dist %>'","            },","            html: 'app/index.html'","        },","","        // Performs rewrites based on rev and the useminPrepare configuration","        usemin: {","            options: {","                assetsDirs: ['<%= yeoman.dist %>']","            },","            html: ['<%= yeoman.dist %>/{,*/}*.html'],","            css: ['<%= yeoman.dist %>/styles/{,*/}*.css']","        },","","        // The following *-min tasks produce minified files in the dist folder","        imagemin: {","            dist: {","                files: [{","                    expand: true,","                    cwd: 'app/images',","                    src: '{,*/}*.{gif,jpeg,jpg,png}',","                    dest: '<%= yeoman.dist %>/images'","                }]","            }","        },","        svgmin: {","            dist: {","                files: [{","                    expand: true,","                    cwd: 'app/images',","                    src: '{,*/}*.svg',","                    dest: '<%= yeoman.dist %>/images'","                }]","            }","        },","        htmlmin: {","            dist: {","                options: {","                    collapseBooleanAttributes: true,","                    collapseWhitespace: true,","                    removeAttributeQuotes: true,","                    removeCommentsFromCDATA: true,","                    removeEmptyAttributes: true,","                    removeOptionalTags: true,","                    removeRedundantAttributes: true,","                    useShortDoctype: true","                },","                files: [{","                    expand: true,","                    cwd: '<%= yeoman.dist %>',","                    src: '{,*/}*.html',","                    dest: '<%= yeoman.dist %>'","                }]","            }","        },","","        // By default, your `index.html`'s <!-- Usemin block --> will take care of","        // minification. These next options are pre-configured if you do not wish","        // to use the Usemin blocks.","        // cssmin: {","        //     dist: {","        //         files: {","        //             '<%= yeoman.dist %>/styles/main.css': [","        //                 '.tmp/styles/{,*/}*.css',","        //                 'app/styles/{,*/}*.css'","        //             ]","        //         }","        //     }","        // },","        // uglify: {","        //     dist: {","        //         files: {","        //             '<%= yeoman.dist %>/scripts/scripts.js': [","        //                 '<%= yeoman.dist %>/scripts/scripts.js'","        //             ]","        //         }","        //     }","        // },","        // concat: {","        //     dist: {}","        // },","","        // Copies remaining files to places other tasks can use","        copy: {","            dist: {","                files: [{","                    expand: true,","                    dot: true,","                    cwd: 'app',","                    dest: '<%= yeoman.dist %>',","                    src: [","                        '*.{ico,png,txt}',","                        '.htaccess',","                        'images/{,*/}*.webp',","                        '{,*/}*.html',","                        'styles/fonts/{,*/}*.*',","                        'bower_components/' + (this.includeCompass ? 'sass-' : '') + 'bootstrap/' + (this.includeCompass ? 'fonts/' : 'dist/fonts/') +'*.*'","                    ]","                }]","            },","            styles: {","                expand: true,","                dot: true,","                cwd: 'app/styles',","                dest: '.tmp/styles/',","                src: '{,*/}*.css'","            }","        },","","","        // Generates a custom Modernizr build that includes only the tests you","        // reference in your app","        modernizr: {","            devFile: 'app/bower_components/modernizr/modernizr.js',","            outputFile: '<%= yeoman.dist %>/bower_components/modernizr/modernizr.js',","            files: [","                '<%= yeoman.dist %>/scripts/{,*/}*.js',","                '<%= yeoman.dist %>/styles/{,*/}*.css',","                '!<%= yeoman.dist %>/scripts/vendor/*'","            ],","            uglify: true","        },","","        // Run some tasks in parallel to speed up build process","        concurrent: {","            server: [","                'compass:server',","                'copy:styles'","            ],","            test: [","                'copy:styles'","            ],","            dist: [","                'compass',","                'copy:styles',","                'imagemin',","                'svgmin'","            ]","        }","    });","","","    grunt.registerTask('serve', function (target) {","        if (target === 'dist') {","            return grunt.task.run(['build', 'connect:dist:keepalive']);","        }","","        grunt.task.run([","            'clean:server',","            'concurrent:server',","            'autoprefixer',","            'connect:livereload',","            'watch'","        ]);","    });","","    grunt.registerTask('server', function () {","        grunt.log.warn('The `server` task has been deprecated. Use `grunt serve` to start a server.');","        grunt.task.run(['serve']);","    });","","    grunt.registerTask('test', function(target) {","        if (target !== 'watch') {","            grunt.task.run([","                'clean:server',","                'concurrent:test',","                'autoprefixer',","            ]);","        }","","        grunt.task.run([","            'connect:test',","            'mocha'","        ]);","    });","","    grunt.registerTask('build', [","        'clean:dist',","        'useminPrepare',","        'concurrent:dist',","        'autoprefixer',","        'concat',","        'cssmin',","        'uglify',","        'copy:dist',","        'modernizr',","        'rev',","        'usemin',","        'htmlmin'","    ]);","","    grunt.registerTask('default', [","        'newer:jshint',","        'test',","        'build',","        'uglify'","    ]);","};",""]},{"start":{"row":0,"column":0},"end":{"row":409,"column":0},"action":"insert","lines":["// Generated on 2014-07-22 using generator-webapp 0.4.7","'use strict';","","// # Globbing","// for performance reasons we're only matching one level down:","// 'test/spec/{,*/}*.js'","// use this if you want to recursively match all subfolders:","// 'test/spec/**/*.js'","","module.exports = function (grunt) {","","    // Load grunt tasks automatically","    require('load-grunt-tasks')(grunt);","","    // Time how long tasks take. Can help when optimizing build times","    require('time-grunt')(grunt);","","    // Define the configuration for all the tasks","    grunt.initConfig({","","        // Project settings","        yeoman: {","            // Configurable paths","            app: 'app',","            dist: 'dist'","        },","","        // Watches files for changes and runs tasks based on the changed files","        watch: {","            js: {","                files: ['<%= yeoman.app %>/scripts/{,*/}*.js'],","                tasks: ['jshint'],","                options: {","                    livereload: true","                }","            },","            jstest: {","                files: ['test/spec/{,*/}*.js'],","                tasks: ['test:watch']","            },","            gruntfile: {","                files: ['Gruntfile.js']","            },","            compass: {","                files: ['<%= yeoman.app %>/styles/{,*/}*.{scss,sass}'],","                tasks: ['compass:server', 'autoprefixer']","            },","            styles: {","                files: ['<%= yeoman.app %>/styles/{,*/}*.css'],","                tasks: ['newer:copy:styles', 'autoprefixer']","            },","            livereload: {","                options: {","                    livereload: '<%= connect.options.livereload %>'","                },","                files: [","                    '<%= yeoman.app %>/{,*/}*.html',","                    '.tmp/styles/{,*/}*.css',","                    '<%= yeoman.app %>/images/{,*/}*.{gif,jpeg,jpg,png,svg,webp}'","                ]","            }","        },","","        // The actual grunt server settings","        connect: {","            options: {","                port: 9000,","                livereload: 35729,","                // Change this to '0.0.0.0' to access the server from outside","                hostname: 'localhost'","            },","            livereload: {","                options: {","                    open: true,","                    base: [","                        '.tmp',","                        '<%= yeoman.app %>'","                    ]","                }","            },","            test: {","                options: {","                    port: 9001,","                    base: [","                        '.tmp',","                        'test',","                        '<%= yeoman.app %>'","                    ]","                }","            },","            dist: {","                options: {","                    open: true,","                    base: '<%= yeoman.dist %>',","                    livereload: false","                }","            }","        },","","        // Empties folders to start fresh","        clean: {","            dist: {","                files: [{","                    dot: true,","                    src: [","                        '.tmp',","                        '<%= yeoman.dist %>/*',","                        '!<%= yeoman.dist %>/.git*'","                    ]","                }]","            },","            server: '.tmp'","        },","","        // Make sure code styles are up to par and there are no obvious mistakes","        jshint: {","            options: {","                jshintrc: '.jshintrc',","                reporter: require('jshint-stylish')","            },","            all: [","                'Gruntfile.js',","                '<%= yeoman.app %>/scripts/{,*/}*.js',","                '!<%= yeoman.app %>/scripts/vendor/*',","                'test/spec/{,*/}*.js'","            ]","        },","","","        // Mocha testing framework configuration options","        mocha: {","            all: {","                options: {","                    run: true,","                    urls: ['http://<%= connect.test.options.hostname %>:<%= connect.test.options.port %>/index.html']","                }","            }","        },","","","","","        // Compiles Sass to CSS and generates necessary files if requested","        compass: {","            options: {","                sassDir: '<%= yeoman.app %>/styles',","                cssDir: '<%= yeoman.app %>/css',","                generatedImagesDir: '.tmp/images/generated',","                imagesDir: '<%= yeoman.app %>/images',","                javascriptsDir: '<%= yeoman.app %>/scripts',","                fontsDir: '<%= yeoman.app %>/styles/fonts',","                importPath: '<%= yeoman.app %>/bower_components/foundation/scss/',","                httpImagesPath: '/images',","                httpGeneratedImagesPath: '/images/generated',","                httpFontsPath: '/styles/fonts',","                relativeAssets: false,","                assetCacheBuster: false","            },","            dist: {","                options: {","                    generatedImagesDir: '<%= yeoman.dist %>/images/generated'","                }","            },","            server: {","                options: {","                    debugInfo: true","                }","            }","        },","","        // Add vendor prefixed styles","        autoprefixer: {","            options: {","                browsers: ['last 1 version']","            },","            dist: {","                files: [{","                    expand: true,","                    cwd: 'app/styles/',","                    src: '{,*/}*.css',","                    dest: 'app/styles/'","                }]","            }","        },","","        // Automatically inject Bower components into the HTML file","        'bower-install': {","            app: {","                html: '<%= yeoman.app %>/index.html',","                ignorePath: '<%= yeoman.app %>/'","            }","        },","","        // Renames files for browser caching purposes","        rev: {","            dist: {","                files: {","                    src: [","                        '<%= yeoman.dist %>/scripts/{,*/}*.js',","                        '<%= yeoman.dist %>/styles/{,*/}*.css',","                        '<%= yeoman.dist %>/images/{,*/}*.{gif,jpeg,jpg,png,webp}',","                        '<%= yeoman.dist %>/styles/fonts/{,*/}*.*'","                    ]","                }","            }","        },","","        // Reads HTML for usemin blocks to enable smart builds that automatically","        // concat, minify and revision files. Creates configurations in memory so","        // additional tasks can operate on them","        useminPrepare: {","            options: {","                dest: '<%= yeoman.dist %>'","            },","            html: '<%= yeoman.app %>/index.html'","        },","","        // Performs rewrites based on rev and the useminPrepare configuration","        usemin: {","            options: {","                assetsDirs: ['<%= yeoman.dist %>']","            },","            html: ['<%= yeoman.dist %>/{,*/}*.html'],","            css: ['<%= yeoman.dist %>/styles/{,*/}*.css']","        },","","        // The following *-min tasks produce minified files in the dist folder","        imagemin: {","            dist: {","                files: [{","                    expand: true,","                    cwd: '<%= yeoman.app %>/images',","                    src: '{,*/}*.{gif,jpeg,jpg,png}',","                    dest: '<%= yeoman.dist %>/images'","                }]","            }","        },","        svgmin: {","            dist: {","                files: [{","                    expand: true,","                    cwd: '<%= yeoman.app %>/images',","                    src: '{,*/}*.svg',","                    dest: '<%= yeoman.dist %>/images'","                }]","            }","        },","        htmlmin: {","            dist: {","                options: {","                    collapseBooleanAttributes: true,","                    collapseWhitespace: true,","                    removeAttributeQuotes: true,","                    removeCommentsFromCDATA: true,","                    removeEmptyAttributes: true,","                    removeOptionalTags: true,","                    removeRedundantAttributes: true,","                    useShortDoctype: true","                },","                files: [{","                    expand: true,","                    cwd: '<%= yeoman.dist %>',","                    src: '{,*/}*.html',","                    dest: '<%= yeoman.dist %>'","                }]","            }","        },","","        // By default, your `index.html`'s <!-- Usemin block --> will take care of","        // minification. These next options are pre-configured if you do not wish","        // to use the Usemin blocks.","        // cssmin: {","        //     dist: {","        //         files: {","        //             '<%= yeoman.dist %>/styles/main.css': [","        //                 '.tmp/styles/{,*/}*.css',","        //                 '<%= yeoman.app %>/styles/{,*/}*.css'","        //             ]","        //         }","        //     }","        // },","        // uglify: {","        //     dist: {","        //         files: {","        //             '<%= yeoman.dist %>/scripts/scripts.js': [","        //                 '<%= yeoman.dist %>/scripts/scripts.js'","        //             ]","        //         }","        //     }","        // },","        // concat: {","        //     dist: {}","        // },","","        // Copies remaining files to places other tasks can use","        copy: {","            dist: {","                files: [{","                    expand: true,","                    dot: true,","                    cwd: '<%= yeoman.app %>',","                    dest: '<%= yeoman.dist %>',","                    src: [","                        '*.{ico,png,txt}',","                        '.htaccess',","                        'images/{,*/}*.webp',","                        '{,*/}*.html',","                        'styles/fonts/{,*/}*.*',","                        'bower_components/' + (this.includeCompass ? 'sass-' : '') + 'bootstrap/' + (this.includeCompass ? 'fonts/' : 'dist/fonts/') +'*.*'","                    ]","                }]","            },","            styles: {","                expand: true,","                dot: true,","                cwd: '<%= yeoman.app %>/styles',","                dest: '.tmp/styles/',","                src: '{,*/}*.css'","            }","        },","","","        // Generates a custom Modernizr build that includes only the tests you","        // reference in your app","        modernizr: {","            devFile: '<%= yeoman.app %>/bower_components/modernizr/modernizr.js',","            outputFile: '<%= yeoman.dist %>/bower_components/modernizr/modernizr.js',","            files: [","                '<%= yeoman.dist %>/scripts/{,*/}*.js',","                '<%= yeoman.dist %>/styles/{,*/}*.css',","                '!<%= yeoman.dist %>/scripts/vendor/*'","            ],","            uglify: true","        },","","        // Run some tasks in parallel to speed up build process","        concurrent: {","            server: [","                'compass:server',","                'copy:styles'","            ],","            test: [","                'copy:styles'","            ],","            dist: [","                'compass',","                'copy:styles',","                'imagemin',","                'svgmin'","            ]","        }","    });","","","    grunt.registerTask('serve', function (target) {","        if (target === 'dist') {","            return grunt.task.run(['build', 'connect:dist:keepalive']);","        }","","        grunt.task.run([","            'clean:server',","            'concurrent:server',","            'autoprefixer',","            'connect:livereload',","            'watch'","        ]);","    });","","    grunt.registerTask('server', function () {","        grunt.log.warn('The `server` task has been deprecated. Use `grunt serve` to start a server.');","        grunt.task.run(['serve']);","    });","","    grunt.registerTask('test', function(target) {","        if (target !== 'watch') {","            grunt.task.run([","                'clean:server',","                'concurrent:test',","                'autoprefixer',","            ]);","        }","","        grunt.task.run([","            'connect:test',","            'mocha'","        ]);","    });","","    grunt.registerTask('build', [","        'clean:dist',","        'useminPrepare',","        'concurrent:dist',","        'autoprefixer',","        'concat',","        'cssmin',","        'uglify',","        'copy:dist',","        'modernizr',","        'rev',","        'usemin',","        'htmlmin'","    ]);","","    grunt.registerTask('default', [","        'newer:jshint',","        'test',","        'build'","    ]);","};",""]}]}],[{"group":"doc","deltas":[{"start":{"row":409,"column":0},"end":{"row":409,"column":1},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":409,"column":1},"end":{"row":409,"column":2},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":409,"column":2},"end":{"row":409,"column":3},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":409,"column":3},"end":{"row":409,"column":4},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":409,"column":4},"end":{"row":409,"column":5},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":409,"column":4},"end":{"row":409,"column":5},"action":"remove","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":409,"column":3},"end":{"row":409,"column":4},"action":"remove","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":409,"column":2},"end":{"row":409,"column":3},"action":"remove","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":409,"column":1},"end":{"row":409,"column":2},"action":"remove","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":409,"column":0},"end":{"row":409,"column":1},"action":"remove","lines":["g"]}]}]]},"ace":{"folds":[],"scrolltop":580.317684173584,"scrollleft":0,"selection":{"start":{"row":409,"column":0},"end":{"row":409,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":39,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1424390029245}